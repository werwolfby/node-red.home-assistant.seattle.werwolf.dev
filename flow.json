[
    {
        "id": "2bd2274e789770f9",
        "type": "tab",
        "label": "Desdemona",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1340a20ad4b7ee0e",
        "type": "tab",
        "label": "Car",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4fd152e00c0ab0dc",
        "type": "junction",
        "z": "2bd2274e789770f9",
        "x": 1140,
        "y": 720,
        "wires": [
            [
                "0a2aab0e6fc1b742"
            ]
        ]
    },
    {
        "id": "0b2a1929c976a826",
        "type": "junction",
        "z": "2bd2274e789770f9",
        "x": 740,
        "y": 520,
        "wires": [
            [
                "4a5f7f0c50fca5e3"
            ]
        ]
    },
    {
        "id": "9e4c19de58c83b39",
        "type": "junction",
        "z": "2bd2274e789770f9",
        "x": 300,
        "y": 240,
        "wires": [
            [
                "51d9314cfc985fb3"
            ]
        ]
    },
    {
        "id": "6ad554b7a44e1d7b",
        "type": "junction",
        "z": "2bd2274e789770f9",
        "x": 660,
        "y": 240,
        "wires": [
            [
                "51d9314cfc985fb3"
            ]
        ]
    },
    {
        "id": "31a98053936316fc",
        "type": "junction",
        "z": "2bd2274e789770f9",
        "x": 280,
        "y": 680,
        "wires": [
            [
                "38517e7ba1480686"
            ]
        ]
    },
    {
        "id": "a0e4e066f07d58cf",
        "type": "junction",
        "z": "2bd2274e789770f9",
        "x": 580,
        "y": 500,
        "wires": [
            [
                "a077d7e83e2e22df"
            ]
        ]
    },
    {
        "id": "d7b66934858fcf55",
        "type": "junction",
        "z": "2bd2274e789770f9",
        "x": 1540,
        "y": 800,
        "wires": [
            [
                "fef0810c073ba629"
            ]
        ]
    },
    {
        "id": "ef15da8fe3c73c9d",
        "type": "junction",
        "z": "2bd2274e789770f9",
        "x": 720,
        "y": 620,
        "wires": [
            [
                "7f2f77558a821600",
                "5d1491aba71770e5"
            ]
        ]
    },
    {
        "id": "992fe6318c940311",
        "type": "junction",
        "z": "1340a20ad4b7ee0e",
        "x": 1300,
        "y": 160,
        "wires": [
            [
                "a39a7a445c92e6f2",
                "99fa90bc309a073c"
            ]
        ]
    },
    {
        "id": "4bc470be7f7422f2",
        "type": "junction",
        "z": "1340a20ad4b7ee0e",
        "x": 998.0952326059341,
        "y": 168.25396370887756,
        "wires": [
            [
                "4724d8d6f030143b",
                "ab003187fe7a5651"
            ]
        ]
    },
    {
        "id": "87bf47b636fc48e9",
        "type": "junction",
        "z": "1340a20ad4b7ee0e",
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "34f80742832132bb",
                "747714e5a9ee2e55",
                "f9517612a8ef9028"
            ]
        ]
    },
    {
        "id": "09fa53ad8450545f",
        "type": "junction",
        "z": "1340a20ad4b7ee0e",
        "x": 899.5714285373688,
        "y": 167.42857146263123,
        "wires": [
            [
                "4bc470be7f7422f2",
                "87bf47b636fc48e9"
            ]
        ]
    },
    {
        "id": "76ec08fb8ef98996",
        "type": "junction",
        "z": "1340a20ad4b7ee0e",
        "x": 1300,
        "y": 400,
        "wires": [
            [
                "096ac0b4fc4def64",
                "5e541a6642b736ad"
            ]
        ]
    },
    {
        "id": "5e541a6642b736ad",
        "type": "junction",
        "z": "1340a20ad4b7ee0e",
        "x": 1340,
        "y": 360,
        "wires": [
            [
                "fa3239fa189ae15a"
            ]
        ]
    },
    {
        "id": "fa3239fa189ae15a",
        "type": "junction",
        "z": "1340a20ad4b7ee0e",
        "x": 1640,
        "y": 360,
        "wires": [
            [
                "337fbfce67d12fe5"
            ]
        ]
    },
    {
        "id": "99fa90bc309a073c",
        "type": "junction",
        "z": "1340a20ad4b7ee0e",
        "x": 1340,
        "y": 120,
        "wires": [
            [
                "fd124618c2ad1841"
            ]
        ]
    },
    {
        "id": "fd124618c2ad1841",
        "type": "junction",
        "z": "1340a20ad4b7ee0e",
        "x": 1640,
        "y": 120,
        "wires": [
            [
                "7b238122fcd3249b"
            ]
        ]
    },
    {
        "id": "620f3a55dd509088",
        "type": "server",
        "name": "Home",
        "version": 5,
        "addon": false,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": false,
        "heartbeatInterval": "30",
        "areaSelector": "friendlyName",
        "deviceSelector": "friendlyName",
        "entitySelector": "friendlyName",
        "statusSeparator": ": ",
        "statusYear": "hidden",
        "statusMonth": "short",
        "statusDay": "numeric",
        "statusHourCycle": "default",
        "statusTimeFormat": "h:m",
        "enableGlobalContextStore": false
    },
    {
        "id": "4a03965dbf126e99",
        "type": "telegram bot",
        "botname": "Puzynia Home",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "c08fd05c1609c0e0",
        "type": "server-state-changed",
        "z": "2bd2274e789770f9",
        "name": "Alex location changed",
        "server": "620f3a55dd509088",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "device_tracker.werwolf_iphone",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "outputs": 1,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 160,
        "y": 400,
        "wires": [
            [
                "51d9314cfc985fb3"
            ]
        ]
    },
    {
        "id": "95c79ded7353da3d",
        "type": "server-state-changed",
        "z": "2bd2274e789770f9",
        "name": "Tatyana location changed",
        "server": "620f3a55dd509088",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "device_tracker.tatsianas_iphone",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "outputs": 1,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 170,
        "y": 500,
        "wires": [
            [
                "51d9314cfc985fb3"
            ]
        ]
    },
    {
        "id": "4a5f7f0c50fca5e3",
        "type": "function",
        "z": "2bd2274e789770f9",
        "name": "AND",
        "func": "var readyStates = context.get(\"readyStates\");\n\n// topic is a entity id and payload is true/false\nreadyStates[msg.topic] = msg.payload;\n\nconst readyTopics = [];\nfor (var topic in readyStates) {\n    if (readyStates[topic]) {\n        readyTopics.push(topic);\n    }\n}\n\nconst ready = readyTopics.length == 3;\n\nif (context.get(\"ready\") === ready) {\n    return null;\n}\n\ncontext.set(\"ready\", ready);\n\nreturn {\n    payload: ready,\n    readyTopics: readyTopics,\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n// Initialize the context variable to store the sensor states\ncontext.set(\"readyStates\", {});\ncontext.set(\"ready\", false);",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 520,
        "wires": [
            [
                "9840b06a935af036"
            ]
        ]
    },
    {
        "id": "6eac1654075bfd64",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Prompt: Start Desdemona?",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1640,
        "y": 520,
        "wires": [
            [
                "bef53fd5adf4ac69"
            ]
        ]
    },
    {
        "id": "9840b06a935af036",
        "type": "trigger",
        "z": "2bd2274e789770f9",
        "name": "For 10 minutes",
        "op1": "",
        "op2": "{\"type\":\"message\",\"chatId\":-911951572,\"content\":\"Everyone left\"}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "false",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1040,
        "y": 520,
        "wires": [
            [
                "3e8f64d2da52db09"
            ]
        ]
    },
    {
        "id": "415d98b5466ee1b7",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Tatyana at Costco",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "device_tracker.tatsianas_iphone",
        "payload": "costco",
        "payloadType": "str",
        "x": 490,
        "y": 240,
        "wires": [
            [
                "6ad554b7a44e1d7b"
            ]
        ]
    },
    {
        "id": "8f013009a576dca9",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Tatyan at Home",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "device_tracker.tatsianas_iphone",
        "payload": "home",
        "payloadType": "str",
        "x": 480,
        "y": 280,
        "wires": [
            [
                "6ad554b7a44e1d7b"
            ]
        ]
    },
    {
        "id": "cd397820227432d9",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Alex at Costco",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "device_tracker.werwolf_iphone",
        "payload": "costco",
        "payloadType": "str",
        "x": 150,
        "y": 240,
        "wires": [
            [
                "9e4c19de58c83b39"
            ]
        ]
    },
    {
        "id": "08685561367cba32",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Alex at Home",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "device_tracker.werwolf_iphone",
        "payload": "home",
        "payloadType": "str",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "9e4c19de58c83b39"
            ]
        ]
    },
    {
        "id": "3e8f64d2da52db09",
        "type": "function",
        "z": "2bd2274e789770f9",
        "name": "Start Desdemona? Payload",
        "func": "var payload = {\n    type: \"message\",\n    chatId: -911951572,\n    content: \"Do you want to start Desdemona?\",\n    options: {\n        reply_markup: JSON.stringify({\n            inline_keyboard: [\n                [\n                    {\n                        text: \"No\",\n                        callback_data: \"desdemona.no\"\n                    }\n                ],\n                [\n                    {\n                        text: \"Full\",\n                        callback_data: \"desdemona.full\"\n                    }\n                ],\n                [\n                    {\n                        text: \"Kitchen x2\",\n                        callback_data: \"desdemona.kitchen.x2\"\n                    }\n                ],\n                [\n                    {\n                        text: \"Kitchen + Living\",\n                        callback_data: \"desdemona.kitchen+living\"\n                    }\n                ],\n            ]\n            }\n        )\n    },\n    error: false\n}\n\nreturn {\n    \"payload\": payload\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 520,
        "wires": [
            [
                "6eac1654075bfd64"
            ]
        ]
    },
    {
        "id": "16853c6578273382",
        "type": "telegram event",
        "z": "2bd2274e789770f9",
        "name": "Start Desdemona? Callback",
        "bot": "4a03965dbf126e99",
        "event": "callback_query",
        "autoanswer": false,
        "x": 180,
        "y": 1000,
        "wires": [
            [
                "0b86a3a1309c8e89"
            ]
        ]
    },
    {
        "id": "0b86a3a1309c8e89",
        "type": "function",
        "z": "2bd2274e789770f9",
        "name": "Desdemona Callback",
        "func": "const content = msg.payload.content;\nif (!content.startsWith(\"desdemona.\")) {\n    return;\n}\n\nconst action = content.substring(\"desdemona.\".length);\n\nconst commands = [\n    {\n        action: \"no\",\n        content: \"Ok! Let's clean next time ;)\"\n    },\n    {\n        action: \"full\",\n        content: \"Desdemona: starting full clean\"\n    },\n    {\n        action: \"kitchen.x2\",\n        content: \"Desdemona: clean kitchen twice\"\n    },\n    {\n        action: \"kitchen+living\",\n        content: \"Desdemona: starting clean kitchen and then leaving\"\n    },\n]\n\n// find command and it index\nconst command = commands.find(item => item.action === action) ||\n    { content: `Unknow command ${action}` };\nconst index = command != null\n    ? commands.findIndex(item => item.action === action)\n    : commands.length;\n\nconst result = {\n    callbackQuery: msg,\n    payload: {\n        type: \"message\",\n        chatId: msg.payload.chatId,\n        content: command.content,\n    },\n}\n\n// return array of messages, all null except the one with the result\nreturn Array.from({ length: commands.length + 1 }, (_, i) => i == index ? result : null);",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 1000,
        "wires": [
            [
                "4fd152e00c0ab0dc",
                "543156828cfb4e5a"
            ],
            [
                "4fd152e00c0ab0dc",
                "f8776667fd6fcd84"
            ],
            [
                "4fd152e00c0ab0dc",
                "e9d9cbe925f09652"
            ],
            [
                "4fd152e00c0ab0dc",
                "663da4bdee567fa2"
            ],
            [
                "7aef59d33e4d627c"
            ]
        ]
    },
    {
        "id": "543156828cfb4e5a",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Reply: No cleaning",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1290,
        "y": 880,
        "wires": [
            [
                "d7b66934858fcf55"
            ]
        ]
    },
    {
        "id": "663da4bdee567fa2",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Reply: Kitchen and Living",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1310,
        "y": 1060,
        "wires": [
            [
                "34f6389ac78ce5f0",
                "d7b66934858fcf55"
            ]
        ]
    },
    {
        "id": "e9d9cbe925f09652",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Reply: Kitchen x2",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1290,
        "y": 1000,
        "wires": [
            [
                "927aed1a47bb6481",
                "d7b66934858fcf55"
            ]
        ]
    },
    {
        "id": "f8776667fd6fcd84",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Reply: Full",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1270,
        "y": 940,
        "wires": [
            [
                "2d3a7acd14c5e9d6",
                "d7b66934858fcf55"
            ]
        ]
    },
    {
        "id": "7aef59d33e4d627c",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Reply: Unknown command",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1320,
        "y": 1120,
        "wires": [
            [
                "d7b66934858fcf55"
            ]
        ]
    },
    {
        "id": "0a2aab0e6fc1b742",
        "type": "function",
        "z": "2bd2274e789770f9",
        "name": "Clear Keyboard",
        "func": "var reply_markup = JSON.stringify({\n    \"inline_keyboard\": []\n});\n\n\nreturn {\n    payload: {\n        type: \"editMessageReplyMarkup\",\n        content: reply_markup,\n        options: {\n            chat_id: msg.callbackQuery.payload.chatId,\n            reply_markup: reply_markup,\n            message_id: msg.callbackQuery.payload.messageId\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 720,
        "wires": [
            [
                "637d082476a27a7b"
            ]
        ]
    },
    {
        "id": "637d082476a27a7b",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Send clear keyboard",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1680,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "12fbf16a28813b73",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Emulate Desdemona flow",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1010,
        "y": 380,
        "wires": [
            [
                "3e8f64d2da52db09"
            ]
        ]
    },
    {
        "id": "2d3a7acd14c5e9d6",
        "type": "api-call-service",
        "z": "2bd2274e789770f9",
        "name": "Clean: Full",
        "server": "620f3a55dd509088",
        "version": 5,
        "debugenabled": false,
        "domain": "vacuum",
        "service": "start",
        "areaId": [],
        "deviceId": [
            "89137e03828a27c3b3520ce97c94ad7f"
        ],
        "entityId": [],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1890,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "927aed1a47bb6481",
        "type": "api-call-service",
        "z": "2bd2274e789770f9",
        "name": "Clean: Kitchen x2",
        "server": "620f3a55dd509088",
        "version": 5,
        "debugenabled": false,
        "domain": "vacuum",
        "service": "send_command",
        "areaId": [],
        "deviceId": [
            "89137e03828a27c3b3520ce97c94ad7f"
        ],
        "entityId": [],
        "data": "{\"command\":\"app_segment_clean\",\"params\":[{\"segments\":[18]},{\"repeat\":2}]}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1910,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "34f6389ac78ce5f0",
        "type": "api-call-service",
        "z": "2bd2274e789770f9",
        "name": "Clean: Kitchen and Living",
        "server": "620f3a55dd509088",
        "version": 5,
        "debugenabled": false,
        "domain": "vacuum",
        "service": "send_command",
        "areaId": [],
        "deviceId": [
            "89137e03828a27c3b3520ce97c94ad7f"
        ],
        "entityId": [],
        "data": "{\"command\":\"app_segment_clean\",\"params\":[{\"segments\":[18,22,19]},{\"repeat\":1}]}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1930,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "7623333fe8162570",
        "type": "server-state-changed",
        "z": "2bd2274e789770f9",
        "name": "Desdoma Returning Home",
        "server": "620f3a55dd509088",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.roborock_s7_maxv_status",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "returning_home",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 170,
        "y": 1440,
        "wires": [
            [
                "e7abb81ca13ced55"
            ],
            []
        ]
    },
    {
        "id": "e7abb81ca13ced55",
        "type": "function",
        "z": "2bd2274e789770f9",
        "name": "Returning Home Message",
        "func": "return {\n    callbackQuery: msg,\n    payload: {\n        type: \"message\",\n        chatId: -911951572,\n        content: \"Desdemona: Returning home\",\n    },\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1440,
        "wires": [
            [
                "d8e4de1c6b04d062"
            ]
        ]
    },
    {
        "id": "d8e4de1c6b04d062",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Reply: Returning Home",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1070,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "ef62f8d04bdad2ac",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Run Kitchen x2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1700,
        "y": 980,
        "wires": [
            [
                "927aed1a47bb6481"
            ]
        ]
    },
    {
        "id": "c242ae7b3884182b",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Run Kitchen amd Living",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1680,
        "y": 1040,
        "wires": [
            [
                "34f6389ac78ce5f0"
            ]
        ]
    },
    {
        "id": "0a0504f6beef09e8",
        "type": "server-state-changed",
        "z": "2bd2274e789770f9",
        "name": "Desdoma state Changed",
        "server": "620f3a55dd509088",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.roborock_s7_maxv_status",
        "entityidfiltertype": "exact",
        "outputinitially": true,
        "state_type": "str",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 170,
        "y": 580,
        "wires": [
            [
                "38517e7ba1480686"
            ]
        ]
    },
    {
        "id": "38517e7ba1480686",
        "type": "switch",
        "z": "2bd2274e789770f9",
        "name": "Read to Clean?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "charging",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "idle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "paused",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 440,
        "y": 580,
        "wires": [
            [
                "a0e4e066f07d58cf"
            ],
            [
                "a0e4e066f07d58cf"
            ],
            [
                "a0e4e066f07d58cf"
            ],
            [
                "14f4ce8b67fa0782"
            ]
        ]
    },
    {
        "id": "a077d7e83e2e22df",
        "type": "change",
        "z": "2bd2274e789770f9",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 500,
        "wires": [
            [
                "0b2a1929c976a826"
            ]
        ]
    },
    {
        "id": "14f4ce8b67fa0782",
        "type": "change",
        "z": "2bd2274e789770f9",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 540,
        "wires": [
            [
                "0b2a1929c976a826"
            ]
        ]
    },
    {
        "id": "51d9314cfc985fb3",
        "type": "switch",
        "z": "2bd2274e789770f9",
        "name": "Away?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "home",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 440,
        "wires": [
            [
                "a0e4e066f07d58cf"
            ],
            [
                "14f4ce8b67fa0782"
            ]
        ]
    },
    {
        "id": "b557b58c18e4184e",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Alex Away",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "device_tracker.werwolf_iphone",
        "payload": "away",
        "payloadType": "str",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "9e4c19de58c83b39"
            ]
        ]
    },
    {
        "id": "f4a48b5c1b57c18e",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Tatyana Away",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "device_tracker.tatsianas_iphone",
        "payload": "away",
        "payloadType": "str",
        "x": 470,
        "y": 200,
        "wires": [
            [
                "6ad554b7a44e1d7b"
            ]
        ]
    },
    {
        "id": "396198952df570ad",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Desdemona Idle",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sensor.roborock_s7_maxv_status",
        "payload": "idle",
        "payloadType": "str",
        "x": 140,
        "y": 760,
        "wires": [
            [
                "31a98053936316fc"
            ]
        ]
    },
    {
        "id": "5f7963d043a8dc66",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Desdemona Charging",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sensor.roborock_s7_maxv_status",
        "payload": "charging",
        "payloadType": "str",
        "x": 160,
        "y": 800,
        "wires": [
            [
                "31a98053936316fc"
            ]
        ]
    },
    {
        "id": "89e60dbd404aa96a",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Desdemona Paused",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sensor.roborock_s7_maxv_status",
        "payload": "paused",
        "payloadType": "str",
        "x": 390,
        "y": 760,
        "wires": [
            [
                "31a98053936316fc"
            ]
        ]
    },
    {
        "id": "0b2dd6493217403f",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Desdemona Cleaning",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "sensor.roborock_s7_maxv_status",
        "payload": "cleaning",
        "payloadType": "str",
        "x": 400,
        "y": 800,
        "wires": [
            [
                "31a98053936316fc"
            ]
        ]
    },
    {
        "id": "bef53fd5adf4ac69",
        "type": "trigger",
        "z": "2bd2274e789770f9",
        "name": "Wait for 10 minutes to answer",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "topic",
        "topic": "sentMessageId",
        "outputs": 1,
        "x": 2030,
        "y": 520,
        "wires": [
            [
                "ef15da8fe3c73c9d"
            ]
        ]
    },
    {
        "id": "fef0810c073ba629",
        "type": "change",
        "z": "2bd2274e789770f9",
        "name": "Reset wait 10 minutes trigger",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "sentMessageId",
                "pt": "msg",
                "to": "callbackQuery.payload.messageId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1700,
        "y": 800,
        "wires": [
            [
                "bef53fd5adf4ac69"
            ]
        ]
    },
    {
        "id": "7f2f77558a821600",
        "type": "function",
        "z": "2bd2274e789770f9",
        "name": "Replay about timeout",
        "func": "const result = {\n    callbackQuery: msg,\n    payload: {\n        type: \"message\",\n        chatId: -911951572,\n        content: \"There is not answer in 10 minutes, closing prompt :(\",\n    },\n}\n\nreturn result;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 620,
        "wires": [
            [
                "c7a81e41eaef20fb"
            ]
        ]
    },
    {
        "id": "c7a81e41eaef20fb",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Reply: No answer...",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1670,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "5d1491aba71770e5",
        "type": "change",
        "z": "2bd2274e789770f9",
        "name": "Prepare callbackQuery property",
        "rules": [
            {
                "t": "set",
                "p": "callbackQuery",
                "pt": "msg",
                "to": "{\t   \"payload\": {\t       \"chatId\": msg.payload.chatId,\t       \"messageId\": msg.payload.sentMessageId\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 720,
        "wires": [
            [
                "4fd152e00c0ab0dc"
            ]
        ]
    },
    {
        "id": "955c22b17c0b2b08",
        "type": "inject",
        "z": "1340a20ad4b7ee0e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "0 19-22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "72b861115ed417c6"
            ]
        ]
    },
    {
        "id": "4724d8d6f030143b",
        "type": "api-current-state",
        "z": "1340a20ad4b7ee0e",
        "name": "Is door locked?",
        "server": "620f3a55dd509088",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "entity_id": "lock.niro_ev_door_lock",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1140,
        "y": 120,
        "wires": [
            [
                "992fe6318c940311"
            ]
        ]
    },
    {
        "id": "7b238122fcd3249b",
        "type": "join",
        "z": "1340a20ad4b7ee0e",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1750,
        "y": 160,
        "wires": [
            [
                "832a387b6e298e5a"
            ]
        ]
    },
    {
        "id": "a39a7a445c92e6f2",
        "type": "trigger",
        "z": "1340a20ad4b7ee0e",
        "name": "Wait 2s",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1400,
        "y": 200,
        "wires": [
            [
                "9ff53f29d5af6344"
            ]
        ]
    },
    {
        "id": "9ff53f29d5af6344",
        "type": "change",
        "z": "1340a20ad4b7ee0e",
        "name": "Set complete",
        "rules": [
            {
                "t": "set",
                "p": "complete",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 200,
        "wires": [
            [
                "7b238122fcd3249b"
            ]
        ]
    },
    {
        "id": "ab003187fe7a5651",
        "type": "api-current-state",
        "z": "1340a20ad4b7ee0e",
        "name": "Car location",
        "server": "620f3a55dd509088",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "entity_id": "device_tracker.niro_ev_location",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1130,
        "y": 200,
        "wires": [
            [
                "992fe6318c940311"
            ]
        ]
    },
    {
        "id": "832a387b6e298e5a",
        "type": "function",
        "z": "1340a20ad4b7ee0e",
        "name": "Prepare Telegram Message if needed",
        "func": "// { \"lock.niro_ev_door_lock\": \"locked\", \"device_tracker.niro_ev_location\": \"home\" }\n\nif (msg.payload[\"lock.niro_ev_door_lock\"] !== \"locked\" &&\n    msg.payload[\"device_tracker.niro_ev_location\"] == \"home\") {\n    return {\n        payload: {\n            type: \"message\",\n            chatId: -911951572,\n            content: \"Car is unlocked! Don't forget to lock it!\"\n        }\n    }\n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1990,
        "y": 160,
        "wires": [
            [
                "c0b04abfdcc3596d"
            ]
        ]
    },
    {
        "id": "c0b04abfdcc3596d",
        "type": "telegram sender",
        "z": "1340a20ad4b7ee0e",
        "name": "",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 2300,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "91f5922e26ae5287",
        "type": "api-call-service",
        "z": "1340a20ad4b7ee0e",
        "name": "",
        "server": "620f3a55dd509088",
        "version": 5,
        "debugenabled": false,
        "domain": "kia_uvo",
        "service": "force_update",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"device_id\":\"3b9cdb32b11a6c821c01432b302dd5c3\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "last",
        "x": 760,
        "y": 40,
        "wires": [
            [
                "893b0432f14a01ec"
            ]
        ]
    },
    {
        "id": "893b0432f14a01ec",
        "type": "delay",
        "z": "1340a20ad4b7ee0e",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1000,
        "y": 40,
        "wires": [
            [
                "09fa53ad8450545f"
            ]
        ]
    },
    {
        "id": "34f80742832132bb",
        "type": "api-current-state",
        "z": "1340a20ad4b7ee0e",
        "name": "Battery Level",
        "server": "620f3a55dd509088",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "entity_id": "sensor.niro_ev_ev_battery_level",
        "state_type": "num",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1130,
        "y": 400,
        "wires": [
            [
                "76ec08fb8ef98996"
            ]
        ]
    },
    {
        "id": "747714e5a9ee2e55",
        "type": "api-current-state",
        "z": "1340a20ad4b7ee0e",
        "name": "Charging Plug state",
        "server": "620f3a55dd509088",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "entity_id": "binary_sensor.niro_ev_ev_battery_plug",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1150,
        "y": 480,
        "wires": [
            [
                "76ec08fb8ef98996"
            ]
        ]
    },
    {
        "id": "096ac0b4fc4def64",
        "type": "trigger",
        "z": "1340a20ad4b7ee0e",
        "name": "Wait 2",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1390,
        "y": 440,
        "wires": [
            [
                "5a8e4288a2eaf9af"
            ]
        ]
    },
    {
        "id": "5a8e4288a2eaf9af",
        "type": "change",
        "z": "1340a20ad4b7ee0e",
        "name": "Set complete",
        "rules": [
            {
                "t": "set",
                "p": "complete",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 440,
        "wires": [
            [
                "337fbfce67d12fe5"
            ]
        ]
    },
    {
        "id": "337fbfce67d12fe5",
        "type": "join",
        "z": "1340a20ad4b7ee0e",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1750,
        "y": 400,
        "wires": [
            [
                "40bdeceffb65bf9a"
            ]
        ]
    },
    {
        "id": "40bdeceffb65bf9a",
        "type": "function",
        "z": "1340a20ad4b7ee0e",
        "name": "Prepare Telegram Message if needed",
        "func": "if (msg.payload[\"sensor.niro_ev_ev_battery_level\"] < 40 &&\n    msg.payload[\"binary_sensor.niro_ev_ev_battery_plug\"] == \"off\" &&\n    msg.payload[\"device_tracker.niro_ev_location\"] == \"home\") {\n    return {\n        payload: {\n            type: \"message\",\n            chatId: -911951572,\n            content: `Niro EV batter level is ${msg.payload[\"sensor.niro_ev_ev_battery_level\"]}%! Don't forget to charge it!`\n        }\n    }\n}\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1990,
        "y": 400,
        "wires": [
            [
                "c0b04abfdcc3596d"
            ]
        ]
    },
    {
        "id": "72b861115ed417c6",
        "type": "api-current-state",
        "z": "1340a20ad4b7ee0e",
        "name": "Update At",
        "server": "620f3a55dd509088",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "entity_id": "sensor.niro_ev_last_updated_at",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 390,
        "y": 160,
        "wires": [
            [
                "d17929cdd716e092"
            ]
        ]
    },
    {
        "id": "d17929cdd716e092",
        "type": "function",
        "z": "1340a20ad4b7ee0e",
        "name": "Update age is more 30 min",
        "func": "const timeStamp = Date.parse(msg.payload)\n\nconst now = Date.now();\n\nmsg.updated_at = timeStamp;\nmsg.now = now;\nmsg.diff = now - timeStamp;\n\nconst millisecondsIn30Minutes = 60 * 60 * 30 * 1000;\nmsg.payload = msg.diff > millisecondsIn30Minutes;\n\nif (msg.payload) {\n    return [msg, null];\n}\n\nreturn [null, msg]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 160,
        "wires": [
            [
                "91f5922e26ae5287"
            ],
            [
                "09fa53ad8450545f"
            ]
        ],
        "outputLabels": [
            "stale",
            "fresh"
        ]
    },
    {
        "id": "d49fbc079a34a6e2",
        "type": "inject",
        "z": "1340a20ad4b7ee0e",
        "name": "Debug Battery Level Check",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 780,
        "y": 460,
        "wires": [
            [
                "87bf47b636fc48e9"
            ]
        ]
    },
    {
        "id": "5f311707f4eff0d9",
        "type": "inject",
        "z": "1340a20ad4b7ee0e",
        "name": "Debug Lock Check",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 810,
        "y": 240,
        "wires": [
            [
                "4bc470be7f7422f2"
            ]
        ]
    },
    {
        "id": "f9517612a8ef9028",
        "type": "api-current-state",
        "z": "1340a20ad4b7ee0e",
        "name": "Car location",
        "server": "620f3a55dd509088",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "entity_id": "device_tracker.niro_ev_location",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1130,
        "y": 320,
        "wires": [
            [
                "76ec08fb8ef98996"
            ]
        ]
    }
]