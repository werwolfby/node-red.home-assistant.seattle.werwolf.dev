[
    {
        "id": "2bd2274e789770f9",
        "type": "tab",
        "label": "Desdemona",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "620f3a55dd509088",
        "type": "server",
        "name": "Home",
        "version": 5,
        "addon": false,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": false,
        "heartbeatInterval": "30",
        "areaSelector": "friendlyName",
        "deviceSelector": "friendlyName",
        "entitySelector": "friendlyName",
        "statusSeparator": ": ",
        "statusYear": "hidden",
        "statusMonth": "short",
        "statusDay": "numeric",
        "statusHourCycle": "default",
        "statusTimeFormat": "h:m",
        "enableGlobalContextStore": false
    },
    {
        "id": "4a03965dbf126e99",
        "type": "telegram bot",
        "botname": "Puzynia Home",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "c08fd05c1609c0e0",
        "type": "server-state-changed",
        "z": "2bd2274e789770f9",
        "name": "Alex not Home",
        "server": "620f3a55dd509088",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "device_tracker.werwolf_iphone",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "home",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "true",
                "valueType": "bool"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 460,
        "wires": [
            [
                "4a5f7f0c50fca5e3"
            ],
            []
        ]
    },
    {
        "id": "95c79ded7353da3d",
        "type": "server-state-changed",
        "z": "2bd2274e789770f9",
        "name": "Tatyana not Home",
        "server": "620f3a55dd509088",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "device_tracker.tatsianas_iphone",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "home",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "true",
                "valueType": "bool"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 150,
        "y": 580,
        "wires": [
            [
                "4a5f7f0c50fca5e3"
            ],
            []
        ]
    },
    {
        "id": "4a5f7f0c50fca5e3",
        "type": "function",
        "z": "2bd2274e789770f9",
        "name": "AND",
        "func": "var sensorName = msg.topic; // Assuming the topic contains the sensor name\nvar sensorState = msg.payload;\nvar sensorStates = context.get(\"sensorStates\");\n\nsensorStates[sensorName] = sensorState;\n\nvar collectedSensors = [];\nfor (var sensor in sensorStates) {\n    if (sensorStates[sensor]) {\n        collectedSensors.push(sensor)\n    }\n}\n\nreturn {\n    payload: collectedSensors.length == 2\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n// Initialize the context variable to store the sensor states\ncontext.set(\"sensorStates\", {});",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 520,
        "wires": [
            [
                "9840b06a935af036"
            ]
        ]
    },
    {
        "id": "6eac1654075bfd64",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Prompt: Start Desdemona?",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1460,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "9840b06a935af036",
        "type": "trigger",
        "z": "2bd2274e789770f9",
        "name": "For 10 minutes",
        "op1": "",
        "op2": "{\"type\":\"message\",\"chatId\":-911951572,\"content\":\"Everyone left\"}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "false",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 680,
        "y": 520,
        "wires": [
            [
                "3e8f64d2da52db09"
            ]
        ]
    },
    {
        "id": "415d98b5466ee1b7",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Tatyana Away",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "device_tracker.tatsianas_iphone",
        "payload": "true",
        "payloadType": "bool",
        "x": 150,
        "y": 700,
        "wires": [
            [
                "4a5f7f0c50fca5e3"
            ]
        ]
    },
    {
        "id": "8f013009a576dca9",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Tatyana at Home",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "device_tracker.tatsianas_iphone",
        "payload": "false",
        "payloadType": "bool",
        "x": 160,
        "y": 740,
        "wires": [
            [
                "4a5f7f0c50fca5e3"
            ]
        ]
    },
    {
        "id": "cd397820227432d9",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Alex Away",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "device_tracker.werwolf_iphone",
        "payload": "true",
        "payloadType": "bool",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "4a5f7f0c50fca5e3"
            ]
        ]
    },
    {
        "id": "08685561367cba32",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Alex at Home",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "device_tracker.werwolf_iphone",
        "payload": "false",
        "payloadType": "bool",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "4a5f7f0c50fca5e3"
            ]
        ]
    },
    {
        "id": "3e8f64d2da52db09",
        "type": "function",
        "z": "2bd2274e789770f9",
        "name": "Start Desdemona? Payload",
        "func": "var payload = {\n    type: \"message\",\n    chatId: -911951572,\n    content: \"Do you want to start Desdemona?\",\n    options: {\n        reply_markup: JSON.stringify({\n            inline_keyboard: [\n                [\n                    {\n                        text: \"No\",\n                        callback_data: \"desdemona.no\"\n                    }\n                ],\n                [\n                    {\n                        text: \"Full\",\n                        callback_data: \"desdemona.full\"\n                    }\n                ],\n                [\n                    {\n                        text: \"Kitchen x2\",\n                        callback_data: \"desdemona.kitchen.x2\"\n                    }\n                ],\n                [\n                    {\n                        text: \"Kitchen + Living\",\n                        callback_data: \"desdemona.kitchen+living\"\n                    }\n                ],\n            ]\n            }\n        )\n    },\n    error: false\n}\n\nreturn {\n    \"payload\": payload\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 520,
        "wires": [
            [
                "6eac1654075bfd64"
            ]
        ]
    },
    {
        "id": "16853c6578273382",
        "type": "telegram event",
        "z": "2bd2274e789770f9",
        "name": "Start Desdemona? Callback",
        "bot": "4a03965dbf126e99",
        "event": "callback_query",
        "autoanswer": false,
        "x": 180,
        "y": 1000,
        "wires": [
            [
                "0b86a3a1309c8e89"
            ]
        ]
    },
    {
        "id": "0b86a3a1309c8e89",
        "type": "function",
        "z": "2bd2274e789770f9",
        "name": "Desdemona Callback",
        "func": "const content = msg.payload.content;\nif (!content.startsWith(\"desdemona.\")) {\n    return;\n}\n\nconst action = content.substring(\"desdemona.\".length);\n\nconst commands = [\n    {\n        action: \"no\",\n        content: \"Ok! Let's clean next time ;)\"\n    },\n    {\n        action: \"full\",\n        content: \"Desdemona: starting full clean\"\n    },\n    {\n        action: \"kitchen.x2\",\n        content: \"Desdemona: clean kitchen twice\"\n    },\n    {\n        action: \"kitchen+living\",\n        content: \"Desdemona: starting clean kitchen and then leaving\"\n    },\n]\n\n// find command and it index\nconst command = commands.find(item => item.action === action) ||\n    { content: `Unknow command ${action}` };\nconst index = command != null\n    ? commands.findIndex(item => item.action === action)\n    : commands.length;\n\nconst result = {\n    callbackQuery: msg,\n    payload: {\n        type: \"message\",\n        chatId: msg.payload.chatId,\n        content: command.content,\n    },\n}\n\n// return array of messages, all null except the one with the result\nreturn Array.from({ length: commands.length + 1 }, (_, i) => i == index ? result : null);",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1000,
        "wires": [
            [
                "0a2aab0e6fc1b742",
                "543156828cfb4e5a"
            ],
            [
                "0a2aab0e6fc1b742",
                "f8776667fd6fcd84"
            ],
            [
                "0a2aab0e6fc1b742",
                "e9d9cbe925f09652"
            ],
            [
                "0a2aab0e6fc1b742",
                "663da4bdee567fa2"
            ],
            [
                "7aef59d33e4d627c"
            ]
        ]
    },
    {
        "id": "543156828cfb4e5a",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Reply: No cleaning",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1050,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "663da4bdee567fa2",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Reply: Kitchen and Living",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1070,
        "y": 1060,
        "wires": [
            [
                "34f6389ac78ce5f0"
            ]
        ]
    },
    {
        "id": "e9d9cbe925f09652",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Reply: Kitchen x2",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1050,
        "y": 1000,
        "wires": [
            [
                "927aed1a47bb6481"
            ]
        ]
    },
    {
        "id": "f8776667fd6fcd84",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Reply: Full",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1030,
        "y": 940,
        "wires": [
            [
                "2d3a7acd14c5e9d6"
            ]
        ]
    },
    {
        "id": "7aef59d33e4d627c",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Reply: Unknown command",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1080,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "0a2aab0e6fc1b742",
        "type": "function",
        "z": "2bd2274e789770f9",
        "name": "Clear Keyboard",
        "func": "var reply_markup = JSON.stringify({\n    \"inline_keyboard\": []\n});\n\n\nreturn {\n    payload: {\n        type: \"editMessageReplyMarkup\",\n        content: reply_markup,\n        options: {\n            chat_id: msg.callbackQuery.payload.chatId,\n            reply_markup: reply_markup,\n            message_id: msg.callbackQuery.payload.messageId\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 720,
        "wires": [
            [
                "637d082476a27a7b"
            ]
        ]
    },
    {
        "id": "637d082476a27a7b",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Send clear keyboard",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1440,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "12fbf16a28813b73",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Emulate Desdemona flow",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 770,
        "y": 380,
        "wires": [
            [
                "3e8f64d2da52db09"
            ]
        ]
    },
    {
        "id": "2d3a7acd14c5e9d6",
        "type": "api-call-service",
        "z": "2bd2274e789770f9",
        "name": "Clean: Full",
        "server": "620f3a55dd509088",
        "version": 5,
        "debugenabled": false,
        "domain": "vacuum",
        "service": "start",
        "areaId": [],
        "deviceId": [
            "89137e03828a27c3b3520ce97c94ad7f"
        ],
        "entityId": [],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1410,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "927aed1a47bb6481",
        "type": "api-call-service",
        "z": "2bd2274e789770f9",
        "name": "Clean: Kitchen x2",
        "server": "620f3a55dd509088",
        "version": 5,
        "debugenabled": false,
        "domain": "vacuum",
        "service": "send_command",
        "areaId": [],
        "deviceId": [
            "89137e03828a27c3b3520ce97c94ad7f"
        ],
        "entityId": [],
        "data": "{\"command\":\"app_segment_clean\",\"params\":[{\"segments\":[18]},{\"repeat\":2}]}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1430,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "34f6389ac78ce5f0",
        "type": "api-call-service",
        "z": "2bd2274e789770f9",
        "name": "Clean: Kitchen and Living",
        "server": "620f3a55dd509088",
        "version": 5,
        "debugenabled": false,
        "domain": "vacuum",
        "service": "send_command",
        "areaId": [],
        "deviceId": [
            "89137e03828a27c3b3520ce97c94ad7f"
        ],
        "entityId": [],
        "data": "{\"command\":\"app_segment_clean\",\"params\":[{\"segments\":[18,22,19]},{\"repeat\":1}]}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1450,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "7623333fe8162570",
        "type": "server-state-changed",
        "z": "2bd2274e789770f9",
        "name": "Desdoma Returning Home",
        "server": "620f3a55dd509088",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.roborock_s7_maxv_status",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "returning_home",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 170,
        "y": 1260,
        "wires": [
            [
                "e7abb81ca13ced55"
            ],
            []
        ]
    },
    {
        "id": "e7abb81ca13ced55",
        "type": "function",
        "z": "2bd2274e789770f9",
        "name": "Returning Home Message",
        "func": "return {\n    callbackQuery: msg,\n    payload: {\n        type: \"message\",\n        chatId: -911951572,\n        content: \"Desdemona: Returning home\",\n    },\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1260,
        "wires": [
            [
                "d8e4de1c6b04d062"
            ]
        ]
    },
    {
        "id": "d8e4de1c6b04d062",
        "type": "telegram sender",
        "z": "2bd2274e789770f9",
        "name": "Reply: Returning Home",
        "bot": "4a03965dbf126e99",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1070,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "ef62f8d04bdad2ac",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Run Kitchen x2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 780,
        "wires": [
            [
                "927aed1a47bb6481"
            ]
        ]
    },
    {
        "id": "c242ae7b3884182b",
        "type": "inject",
        "z": "2bd2274e789770f9",
        "name": "Run Kitchen amd Living",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1060,
        "y": 820,
        "wires": [
            [
                "34f6389ac78ce5f0"
            ]
        ]
    }
]